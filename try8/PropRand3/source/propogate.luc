global RowNumb{
  const ROW1 = 2b00;
  const ROW2= 2b01;
  const ROW3= 2b10;
  const ROW4 = 2b11; 
}

global ClkNumb{
  const SLOWCLK21 = 3b000;
  const SLOWCLK22= 3b001;
  const SLOWCLK23= 3b010;
  const SLOWCLK24= 3b011;
  const SLOWCLK25 = 3b100;
}

module propogate (
    input clk,  // clock
//input clkinput[3],
    input rst,  // reset
 //   input num[3], //LED column to light up on each row
//    input clkSel[3], //numbers to select which clock
    output rowLit[2], //the row to be lit up (ctr.value)
    output numSeq[3], //column to be lit-ted up
    //output numOut[3], //LED column that should be lit up on the active row
    output row1,
    output row2,
    output row3,
    output gnd1,
    output gnd2,
    output gnd3
  ) {

  sig chosenClk; 
  sig randNum[3];
  sig clkSel[3];
  
  .clk(clk){
  .rst(rst){
        //set up an array of slow clocks i can choose from
        counter slowclk21(#SIZE(1),#DIV(21));
        counter slowclk22(#SIZE(1),#DIV(22));
        counter slowclk23(#SIZE(1),#DIV(23));
        counter slowclk24(#SIZE(1),#DIV(24));
        counter slowclk25(#SIZE(1),#DIV(25));
        randomizer randomizer;
    }
  } 

 .clk(chosenClk) {   //connect my normal clock to a slower clock
    .rst(rst){
        counter rowCtr(#SIZE(2)); //ctr will go from 00 to 11 this will be the number of row that is lit
        dff seed[32] (#INIT(32d1)); //seed to start numb_gen
        dff clkseed[32] (#INIT(32d3)); // seed to start clk_gen seed chosen is diff from seed1 to ensure randomness
        dff numb_gen1[3] (#INIT(3b001)); //if numb_gen gives me 000, I will use this counter number
  }
  }
 
   
  always {
      
    //setting up the randomiszer
    
    
    //initializin randomizer
    randomizer.numSeed = seed.q;
    randomizer.clkSeed = clkseed.q;
    randomizer.randnumNext = 0; 
    randomizer.randclkNext = 0; 
    randomizer.numbregEn = 0; 
    randomizer.clkregEn = 0;
    randomizer.randnumrst=rst;
    randomizer.randclkrst = rst;
    
     
    if (randomizer.ranNum==3b000){
            randNum = numb_gen1.q;
        }
    else{
          randNum = randomizer.ranNum;
    }
    
    if (randomizer.ranClk==3b101|randomizer.ranClk==3b110|randomizer.ranClk==3b111){
              clkSel = ClkNumb.SLOWCLK23;
    }
    else{
        clkSel = randomizer.ranClk;
    }
    
    rowLit = rowCtr.value;
  //  numSeq = num;
    row1=0; 
    row2=0;
    row3=0;
    gnd1 = ~randNum[0];  //when column is active connect corresponding gnd to 0
    gnd2 = ~randNum[1];
    gnd3 = ~randNum[2];
   
    numSeq = randNum;
    
    
    
  //instantiate outputs 
   
    
      
   case (clkSel){
      ClkNumb.SLOWCLK21:
       chosenClk= slowclk21.value;
      ClkNumb.SLOWCLK22:
      chosenClk = slowclk22.value;
      ClkNumb.SLOWCLK23:
      chosenClk = slowclk23.value;
      ClkNumb.SLOWCLK24:
      chosenClk= slowclk24.value;
      ClkNumb.SLOWCLK25:
      chosenClk = slowclk25.value;
    }
    
   
    case (rowCtr.value){
    //when the corresponding row is 'active' make the entire row active
      RowNumb.ROW1:
          //litrow1=1;
          numb_gen1.d = numb_gen1.q + 1;
          seed.d = seed.q + 1;
          clkseed.d = clkseed.q + 1;
          randomizer.randnumNext = 1; //generate random number seq
          randomizer.randclkNext = 1; //generate random clk number
          randomizer.numbregEn = 1; //write enable register to rmb new value
          randomizer.clkregEn = 1;
          randomizer.randnumrst = 1; //reset so you can generate new numb later
          randomizer.randclkrst = 1; 
           
           
          row1=1;
          row2=0;
          row3=0;
   
      RowNumb.ROW2:
      //light up row 2 with specified numbers
        randomizer.randnumNext = 0; //generate random number seq
          randomizer.randclkNext = 0; //generate random clk number
          randomizer.numbregEn = 0; //write enable register to rmb new value
          randomizer.clkregEn = 0;
        
        row1=0;
        row2=1;
        row3=0;
        
      RowNumb.ROW3:
      //light up row 3 with active numbers
        
         randomizer.randnumNext = 0; //generate random number seq
          randomizer.randclkNext = 0; //generate random clk number
          randomizer.numbregEn = 0; //write enable register to rmb new value
          randomizer.clkregEn = 0;
        row1=0;
        row2=0;
        row3=1;
        
        RowNumb.ROW4:
      //no rows light up (pause to give user time to react) 
        
         randomizer.randnumNext = 0; //generate random number seq
          randomizer.randclkNext = 0; //generate random clk number
          randomizer.numbregEn = 0; //write enable register to rmb new value
          randomizer.clkregEn = 0;
        row1=0;
        row2=0; //change to all 0 after debugging
        row3=0;
        
       
    }
    
    
  }
}