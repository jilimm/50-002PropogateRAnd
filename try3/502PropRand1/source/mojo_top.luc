module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full
    output low1,
    output low2,
    output low3,
    output high1,
    output high2,
    output high3
    
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    //counter ctr(#SIZE(3));
    //fsm state={GEN,PROP};
    
    //pn_gen pn_gen;
    
    .rst(rst){
    counter slowclk(#SIZE(1),#DIV(24));
      }
  }
  .clk(slowclk.value){
    propogate mypropogater;
    register regs(#WIDTH(3));
    
  }

  //sig keepsig;
  dff counter[3](.clk(clk),.rst(rst),#INIT(3b001));
  //dff keep[3](.clk(keepsig),.rst(rst));
  //sig tempNum[3];
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    //ctr.rst = rst;
    //led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    mypropogater.rst=rst;
    counter.d=counter.q + 1;
    mypropogater.num=regs.out;
    regs.data = counter.q;
    regs.rst = rst;
    //keepsig=~mypropogater.rowLit[0] && ~mypropogater.rowLit[1];
    
      high1 = mypropogater.row1;
        high2 = mypropogater.row2;
        high3 = mypropogater.row3;
        led = mypropogater.numOut;
    //mypropogater.num = tempNum;
    
        low1=mypropogater.numOut[0];
        low2=mypropogater.numOut[1];
        low3=mypropogater.numOut[2];
    
    if (mypropogater.rowLit==2b00){
        regs.en=1;
        
    }
    
    else{
      regs.en=0;
      }    
        //changes from 2 lights to only 1 light then stays at 1 light forever
    
  }

}